{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\100li\\\\Desktop\\\\admin\\\\src\\\\page\\\\GptToken.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport AdminHeader from \"../components/AdminHeader\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GptToken = () => {\n  _s();\n  const token = sessionStorage.getItem(\"token\");\n  const navigate = useNavigate();\n  const [data, setData] = useState();\n  useEffect(() => {\n    fetchtoken();\n  }, []); //가져온 토큰사용량\n\n  const fetchtoken = async () => {\n    try {\n      const response = await axios.get(`/admin/viewToken`, {\n        headers: {\n          'Authorization': token\n        }\n      });\n      if (response) {\n        setData(data);\n      }\n    } catch (error) {\n      if (error.response.status === 500) {\n        alert(error.response.data.message);\n      } else if (error.response.status === 401 || error.response.status === 403) {\n        alert(error.response.data.message);\n        sessionStorage.removeItem(\"token\");\n        navigate(\"/admin/login\");\n      }\n    }\n  }; // api로 토큰 사용량 받아오는 함수\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AdminEntire\",\n    children: [/*#__PURE__*/_jsxDEV(AdminHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"UserText\",\n      children: \"GPT \\uD1A0\\uD070 \\uC0AC\\uC6A9\\uB7C9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uC804\\uCCB4 \\uD1A0\\uD070\\uC0AC\\uC6A9\\uB7C9:\", data]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(GptToken, \"4tH5btPxPpaR9yJQbGEUrre5WBU=\", false, function () {\n  return [useNavigate];\n});\n_c = GptToken;\nexport default GptToken;\nvar _c;\n$RefreshReg$(_c, \"GptToken\");","map":{"version":3,"names":["useEffect","useState","AdminHeader","axios","useNavigate","jsxDEV","_jsxDEV","GptToken","_s","token","sessionStorage","getItem","navigate","data","setData","fetchtoken","response","get","headers","error","status","alert","message","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/100li/Desktop/admin/src/page/GptToken.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport AdminHeader from \"../components/AdminHeader\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst GptToken=()=>{\r\n    const token = sessionStorage.getItem(\"token\");\r\n    const navigate = useNavigate();\r\n    const [data,setData]=useState();\r\n    useEffect(() => {\r\n        fetchtoken();\r\n     }, []); //가져온 토큰사용량\r\n    \r\n     \r\n       const fetchtoken = async () => {     \r\n         try {\r\n             const response = await axios.get(`/admin/viewToken`,{\r\n              headers:{\r\n               'Authorization':token\r\n             }\r\n             \r\n           })\r\n           if(response){\r\n            setData(data);\r\n        }\r\n    \r\n         }catch (error) {\r\n          if(error.response.status===500){\r\n           alert(error.response.data.message);\r\n          }\r\n          else if(error.response.status===401 || error.response.status===403){\r\n            alert(error.response.data.message);\r\n            sessionStorage.removeItem(\"token\");\r\n            navigate(\"/admin/login\");\r\n           }\r\n         }  }// api로 토큰 사용량 받아오는 함수\r\nreturn(\r\n    <div className=\"AdminEntire\">\r\n        <AdminHeader/>\r\n        <div className=\"UserText\">GPT 토큰 사용량</div>\r\n        <div>전체 토큰사용량:{data}</div>\r\n\r\n    </div>\r\n)\r\n};\r\nexport default GptToken;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC/C,MAAMC,QAAQ,GAACA,CAAA,KAAI;EAAAC,EAAA;EACf,MAAMC,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;EAC7C,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACS,IAAI,EAACC,OAAO,CAAC,GAACb,QAAQ,CAAC,CAAC;EAC/BD,SAAS,CAAC,MAAM;IACZe,UAAU,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAGN,MAAMA,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAE,kBAAiB,EAAC;QACnDC,OAAO,EAAC;UACP,eAAe,EAACT;QAClB;MAEF,CAAC,CAAC;MACF,IAAGO,QAAQ,EAAC;QACXF,OAAO,CAACD,IAAI,CAAC;MACjB;IAEC,CAAC,QAAOM,KAAK,EAAE;MACd,IAAGA,KAAK,CAACH,QAAQ,CAACI,MAAM,KAAG,GAAG,EAAC;QAC9BC,KAAK,CAACF,KAAK,CAACH,QAAQ,CAACH,IAAI,CAACS,OAAO,CAAC;MACnC,CAAC,MACI,IAAGH,KAAK,CAACH,QAAQ,CAACI,MAAM,KAAG,GAAG,IAAID,KAAK,CAACH,QAAQ,CAACI,MAAM,KAAG,GAAG,EAAC;QACjEC,KAAK,CAACF,KAAK,CAACH,QAAQ,CAACH,IAAI,CAACS,OAAO,CAAC;QAClCZ,cAAc,CAACa,UAAU,CAAC,OAAO,CAAC;QAClCX,QAAQ,CAAC,cAAc,CAAC;MACzB;IACF;EAAG,CAAC;EACb,oBACIN,OAAA;IAAKkB,SAAS,EAAC,aAAa;IAAAC,QAAA,gBACxBnB,OAAA,CAACJ,WAAW;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACdvB,OAAA;MAAKkB,SAAS,EAAC,UAAU;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1CvB,OAAA;MAAAmB,QAAA,GAAK,8CAAS,EAACZ,IAAI;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEzB,CAAC;AAEV,CAAC;AAACrB,EAAA,CAvCID,QAAQ;EAAA,QAEOH,WAAW;AAAA;AAAA0B,EAAA,GAF1BvB,QAAQ;AAwCd,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}