{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\100li\\\\Desktop\\\\admin\\\\src\\\\views\\\\AdminLogin.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport AdminButton from \"../components/AdminButton\";\nimport AdminHeader from \"../components/AdminHeader\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminLogin = () => {\n  _s();\n  const [id, setId] = useState();\n  const [password, setPassword] = useState();\n  const navigate = useNavigate();\n  const handleSubmit = async () => {\n    try {\n      const response = await axios.post('http://localhost:3001/admin/users/login', {\n        userId: id,\n        passwd: password\n      });\n      console.log(response.data); // API 응답 데이터 확인\n\n      // 여기서 토큰을 저장하거나 다른 작업을 수행할 수 있습니다.\n    } catch (error) {\n      console.error('Error occurred:', error);\n      if (error.response) {\n        // 서버에서 응답을 받았지만 상태 코드가 실패를 나타내는 경우\n        console.error('Status:', error.response.status);\n        console.error('Data:', error.response.data);\n      } else if (error.request) {\n        // 서버에 요청을 보냈지만 응답을 받지 못한 경우\n        console.error('No response received:', error.request);\n      } else {\n        // 요청을 보내기 전에 에러가 발생한 경우\n        console.error('Error setting up the request:', error.message);\n      }\n    }\n  };\n\n  /*const handleSubmit=async()=>{\r\n    axios.post(`${process.env.REACT_APP_API_URL}/admin/users/login`, {\r\n     userId:id,\r\n     passwd:password\r\n     \r\n   })\r\n   .then(response => {        \r\n      const token = response.headers.authorization;   \r\n   })\r\n   .catch(error => {\r\n      console.log(error)\r\n       alert(\"로그인에 실패했습니다.\");\r\n   });\r\n   navigate(\"/\");\r\n  }  // axios 이용하여 로그인하는 함수*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AdminLogin\",\n    children: [/*#__PURE__*/_jsxDEV(AdminHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LoginText\",\n      children: \"\\uAD00\\uB9AC\\uC790\\uC6A9 \\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"\\uC544\\uC774\\uB514\",\n      value: id,\n      onChange: e => setId(e.target.value),\n      className: \"LoginInput\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      className: \"LoginInput\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AdminButton, {\n      text: \"\\uB85C\\uADF8\\uC778\",\n      className: \"LoginButton\",\n      onClick: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminLogin, \"3ur0RzYhu+h1QMQiqDiCnH6alTQ=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminLogin;\nexport default AdminLogin;\nvar _c;\n$RefreshReg$(_c, \"AdminLogin\");","map":{"version":3,"names":["useEffect","useState","AdminButton","AdminHeader","useNavigate","axios","jsxDEV","_jsxDEV","AdminLogin","_s","id","setId","password","setPassword","navigate","handleSubmit","response","post","userId","passwd","console","log","data","error","status","request","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","text","onClick","_c","$RefreshReg$"],"sources":["C:/Users/100li/Desktop/admin/src/views/AdminLogin.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport AdminButton from \"../components/AdminButton\";\r\nimport AdminHeader from \"../components/AdminHeader\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nconst AdminLogin=()=>{\r\n    const [id,setId]=useState();\r\n    const [password,setPassword]=useState();\r\n    const navigate=useNavigate()\r\n\r\n    const handleSubmit= async () => {\r\n    \r\n        try {\r\n            const response = await axios.post('http://localhost:3001/admin/users/login', {\r\n                userId: id,\r\n                passwd: password\r\n            });\r\n    \r\n            console.log(response.data); // API 응답 데이터 확인\r\n    \r\n            // 여기서 토큰을 저장하거나 다른 작업을 수행할 수 있습니다.\r\n        } catch (error) {\r\n            console.error('Error occurred:', error);\r\n            if (error.response) {\r\n                // 서버에서 응답을 받았지만 상태 코드가 실패를 나타내는 경우\r\n                console.error('Status:', error.response.status);\r\n                console.error('Data:', error.response.data);\r\n            } else if (error.request) {\r\n                // 서버에 요청을 보냈지만 응답을 받지 못한 경우\r\n                console.error('No response received:', error.request);\r\n            } else {\r\n                // 요청을 보내기 전에 에러가 발생한 경우\r\n                console.error('Error setting up the request:', error.message);\r\n            }\r\n        }\r\n    };\r\n\r\n    /*const handleSubmit=async()=>{\r\n\r\n    axios.post(`${process.env.REACT_APP_API_URL}/admin/users/login`, {\r\n       userId:id,\r\n       passwd:password\r\n       \r\n     })\r\n     .then(response => {        \r\n        const token = response.headers.authorization;   \r\n     })\r\n     .catch(error => {\r\n        console.log(error)\r\n         alert(\"로그인에 실패했습니다.\");\r\n     });\r\n     navigate(\"/\");\r\n    }  // axios 이용하여 로그인하는 함수*/\r\n\r\n return(\r\n    <div className=\"AdminLogin\">\r\n        <AdminHeader/>\r\n        <div className=\"LoginText\">관리자용 로그인</div>\r\n        <input placeholder=\"아이디\" value={id} onChange={(e)=>setId(e.target.value)} className=\"LoginInput\"></input>\r\n        <input placeholder=\"비밀번호\" value={password} onChange={(e)=>setPassword(e.target.value)} className=\"LoginInput\"></input>\r\n        <AdminButton text=\"로그인\" className=\"LoginButton\" onClick={handleSubmit} />\r\n        \r\n    </div>\r\n )\r\n};\r\nexport default AdminLogin;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1B,MAAMC,UAAU,GAACA,CAAA,KAAI;EAAAC,EAAA;EACjB,MAAM,CAACC,EAAE,EAACC,KAAK,CAAC,GAACV,QAAQ,CAAC,CAAC;EAC3B,MAAM,CAACW,QAAQ,EAACC,WAAW,CAAC,GAACZ,QAAQ,CAAC,CAAC;EACvC,MAAMa,QAAQ,GAACV,WAAW,CAAC,CAAC;EAE5B,MAAMW,YAAY,GAAE,MAAAA,CAAA,KAAY;IAE5B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,yCAAyC,EAAE;QACzEC,MAAM,EAAER,EAAE;QACVS,MAAM,EAAEP;MACZ,CAAC,CAAC;MAEFQ,OAAO,CAACC,GAAG,CAACL,QAAQ,CAACM,IAAI,CAAC,CAAC,CAAC;;MAE5B;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MACvC,IAAIA,KAAK,CAACP,QAAQ,EAAE;QAChB;QACAI,OAAO,CAACG,KAAK,CAAC,SAAS,EAAEA,KAAK,CAACP,QAAQ,CAACQ,MAAM,CAAC;QAC/CJ,OAAO,CAACG,KAAK,CAAC,OAAO,EAAEA,KAAK,CAACP,QAAQ,CAACM,IAAI,CAAC;MAC/C,CAAC,MAAM,IAAIC,KAAK,CAACE,OAAO,EAAE;QACtB;QACAL,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACE,OAAO,CAAC;MACzD,CAAC,MAAM;QACH;QACAL,OAAO,CAACG,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAACG,OAAO,CAAC;MACjE;IACJ;EACJ,CAAC;;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGC,oBACGnB,OAAA;IAAKoB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACvBrB,OAAA,CAACJ,WAAW;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACdzB,OAAA;MAAKoB,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzCzB,OAAA;MAAO0B,WAAW,EAAC,oBAAK;MAACC,KAAK,EAAExB,EAAG;MAACyB,QAAQ,EAAGC,CAAC,IAAGzB,KAAK,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAACP,SAAS,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACzGzB,OAAA;MAAO0B,WAAW,EAAC,0BAAM;MAACC,KAAK,EAAEtB,QAAS;MAACuB,QAAQ,EAAGC,CAAC,IAAGvB,WAAW,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAACP,SAAS,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACtHzB,OAAA,CAACL,WAAW;MAACoC,IAAI,EAAC,oBAAK;MAACX,SAAS,EAAC,aAAa;MAACY,OAAO,EAAExB;IAAa;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAExE,CAAC;AAEV,CAAC;AAACvB,EAAA,CA3DID,UAAU;EAAA,QAGGJ,WAAW;AAAA;AAAAoC,EAAA,GAHxBhC,UAAU;AA4DhB,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}