{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\100li\\\\Desktop\\\\admin\\\\src\\\\page\\\\Ai\\\\AiPromptEdit.js\",\n  _s = $RefreshSig$();\nimport { useNavigate } from \"react-router-dom\";\nimport AdminButton from \"../../components/AdminButton\";\nimport AdminHeader from \"../../components/AdminHeader\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AiPromptEdit = () => {\n  _s();\n  const [data, setData] = useState(\"\");\n  const navigate = useNavigate();\n  const token = sessionStorage.getItem(\"token\");\n  useEffect(() => {\n    fetchpromptData();\n  }, []); //가져온 aiprompt 실행\n\n  const fetchpromptData = async () => {\n    try {\n      const response = await axios.get(`/admin/prompt_manager`, {\n        headers: {\n          'Authorization': token\n        }\n      });\n      setData(response.data.prompt);\n    } catch (error) {\n      if (error.response.status === 500) {\n        alert(error.response.data.message);\n      } else if (error.response.status === 401 || error.response.status === 403) {\n        alert(error.response.data.message);\n        sessionStorage.removeItem(\"token\");\n        navigate(\"/admin/login\");\n      }\n    }\n  }; // api로 aiprompt 정보 받아오는 함수\n  const handleSubmit = async () => {\n    axios.post(`/admin/prompt_manager`, {\n      prompt: data\n    }, {\n      headers: {\n        'Authorization': token\n      }\n    }).then(response => {\n      alert(\"전송 성공했습니다\");\n      navigate(\"/admin/\");\n    }).catch(error => {\n      if (error.response.status === 500) {\n        alert(error.response.data.message);\n      } else if (error.response.status === 401 || error.response.status === 403) {\n        alert(error.response.data.message);\n        sessionStorage.removeItem(\"token\");\n        navigate(\"/admin/login\");\n      }\n    });\n  }; // axios 이용하여 aipromt 전송\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AdminEntire\",\n    children: [/*#__PURE__*/_jsxDEV(AdminHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"UserText\",\n      children: \"AiPrompt \\uC218\\uC815\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: data,\n      className: \"AiPromptBox\",\n      onChange: e => setData(e.target.value),\n      style: {\n        resize: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AiPromptButtonList\",\n      children: [/*#__PURE__*/_jsxDEV(AdminButton, {\n        text: \"\\uC774\\uC804\",\n        className: \"AiPromptButton\",\n        onClick: () => navigate(-1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AdminButton, {\n        text: \"\\uC644\\uB8CC\",\n        className: \"AiPromptButton\",\n        onClick: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(AiPromptEdit, \"MbFJ984NE4XOcjfMXUcUXQCO8Bw=\", false, function () {\n  return [useNavigate];\n});\n_c = AiPromptEdit;\nexport default AiPromptEdit;\nvar _c;\n$RefreshReg$(_c, \"AiPromptEdit\");","map":{"version":3,"names":["useNavigate","AdminButton","AdminHeader","useEffect","useState","axios","jsxDEV","_jsxDEV","AiPromptEdit","_s","data","setData","navigate","token","sessionStorage","getItem","fetchpromptData","response","get","headers","prompt","error","status","alert","message","removeItem","handleSubmit","post","then","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","style","resize","text","onClick","_c","$RefreshReg$"],"sources":["C:/Users/100li/Desktop/admin/src/page/Ai/AiPromptEdit.js"],"sourcesContent":["\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport AdminButton from \"../../components/AdminButton\";\r\nimport AdminHeader from \"../../components/AdminHeader\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nconst AiPromptEdit=()=>{\r\n    const [data,setData]=useState(\"\");\r\n    const navigate=useNavigate();\r\n    const token=sessionStorage.getItem(\"token\");\r\n    \r\n    useEffect(() => {\r\n      fetchpromptData();\r\n   }, []); //가져온 aiprompt 실행\r\n  \r\n     const fetchpromptData = async () => {     \r\n       try {\r\n           const response = await axios.get(`/admin/prompt_manager`, {\r\n            headers:{\r\n             'Authorization':token\r\n           }\r\n         })\r\n        setData(response.data.prompt)\r\n       }catch (error) {\r\n        if(error.response.status===500){\r\n        alert(error.response.data.message);\r\n        }\r\n        else if(error.response.status===401 || error.response.status===403){\r\n          alert(error.response.data.message);\r\n          sessionStorage.removeItem(\"token\");\r\n          navigate(\"/admin/login\");\r\n         }\r\n       } } // api로 aiprompt 정보 받아오는 함수\r\n    const handleSubmit=async()=>{\r\n        axios.post(`/admin/prompt_manager`,{\r\n            prompt:data\r\n        }, {\r\n            headers:{\r\n             'Authorization':token\r\n           }\r\n         }).then(response => {        \r\n            alert(\"전송 성공했습니다\");\r\n            navigate(\"/admin/\")\r\n        })\r\n        .catch(error => {\r\n           if(error.response.status===500){\r\n             alert(error.response.data.message);\r\n           }\r\n          else if(error.response.status===401 || error.response.status===403){\r\n             alert(error.response.data.message);\r\n             sessionStorage.removeItem(\"token\");\r\n             navigate(\"/admin/login\");\r\n            }\r\n        });\r\n       }  // axios 이용하여 aipromt 전송\r\n\r\nreturn(\r\n    <div className=\"AdminEntire\">\r\n        <AdminHeader/>\r\n        <div className=\"UserText\">AiPrompt 수정</div>\r\n        <textarea value={data}className=\"AiPromptBox\" onChange={(e)=>setData(e.target.value)} style={{ resize: 'none' }}/>\r\n        <div className=\"AiPromptButtonList\">\r\n        <AdminButton text=\"이전\" className=\"AiPromptButton\" onClick={()=>navigate(-1)}/>\r\n        <AdminButton text=\"완료\" className=\"AiPromptButton\" onClick={handleSubmit}/></div>\r\n        </div>\r\n)\r\n}\r\nexport default AiPromptEdit;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}