{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\100li\\\\Desktop\\\\admin\\\\src\\\\views\\\\QuizEdit.js\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport AdminHeader from \"../components/AdminHeader\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizEdit = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [data, setData] = useState({\n    quizId: \"\",\n    subjectId: \"\",\n    roundId: \"\",\n    keywordId: \"\",\n    quizContent: \"\",\n    quizImg: \"\",\n    answ: \"\",\n    r_answ: \"\",\n    wrgAnsw_explanation: \"\"\n  });\n  useEffect(() => {\n    fetchuserData();\n  }, []); //가져온 수정정보데이터 실행\n\n  const fetchuserData = async () => {\n    try {\n      const response = await axios.get(`${process.env.REACT_APP_API_URL}/admin/quiz/view`);\n      const userData = response.data.quiz.find(item => item.quizId === id);\n      setData({\n        quizId: userData.quizId,\n        subjectId: userData.subjectId,\n        roundId: \"\",\n        keywordId: \"\",\n        quizContent: \"\",\n        quizImg: \"\",\n        answ: \"\",\n        r_answ: \"\",\n        wrgAnsw_explanation: \"\"\n      });\n      console.log(userData);\n    } catch (error) {\n      // if(error.response.status===500){\n      //alert(error.response.data.message);\n    }\n  }; // api로 수정 정보 받아오는 함수\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AdminEntire\",\n    children: /*#__PURE__*/_jsxDEV(AdminHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizEdit, \"Xb2wLNeSLrlVxIPU8IQ5bFkICdE=\", false, function () {\n  return [useParams];\n});\n_c = QuizEdit;\nexport default QuizEdit;\nvar _c;\n$RefreshReg$(_c, \"QuizEdit\");","map":{"version":3,"names":["useParams","AdminHeader","useEffect","useState","axios","jsxDEV","_jsxDEV","QuizEdit","_s","id","data","setData","quizId","subjectId","roundId","keywordId","quizContent","quizImg","answ","r_answ","wrgAnsw_explanation","fetchuserData","response","get","process","env","REACT_APP_API_URL","userData","quiz","find","item","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/100li/Desktop/admin/src/views/QuizEdit.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport AdminHeader from \"../components/AdminHeader\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nconst QuizEdit=()=>{\r\n    const {id}=useParams();\r\n    const [data,setData]=useState({\r\n        quizId:\"\",\r\n        subjectId:\"\",\r\n        roundId:\"\",\r\n        keywordId:\"\",\r\n        quizContent:\"\",\r\n        quizImg:\"\",\r\n        answ:\"\",\r\n         r_answ:\"\",\r\n         wrgAnsw_explanation:\"\",\r\n      })\r\n    useEffect(() => {\r\n        fetchuserData();\r\n     }, []); //가져온 수정정보데이터 실행\r\n  \r\n     \r\n       const fetchuserData = async () => {     \r\n         try {\r\n             const response = await axios.get(`${process.env.REACT_APP_API_URL}/admin/quiz/view`);\r\n             const userData = response.data.quiz.find(item => item.quizId === id);\r\n             setData({\r\n                quizId:userData.quizId,\r\n                subjectId:userData.subjectId,\r\n                roundId:\"\",\r\n                keywordId:\"\",\r\n                quizContent:\"\",\r\n                quizImg:\"\",\r\n                answ:\"\",\r\n                r_answ:\"\",\r\n                wrgAnsw_explanation:\"\",\r\n             });\r\n             console.log(userData);\r\n\r\n         }catch (error) {\r\n         // if(error.response.status===500){\r\n           //alert(error.response.data.message);\r\n          }\r\n         } // api로 수정 정보 받아오는 함수\r\nreturn(\r\n    <div className=\"AdminEntire\">\r\n    <AdminHeader/>\r\n    </div>\r\n)\r\n};\r\nexport default QuizEdit;"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,WAAW,MAAM,2BAA2B;AACnD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1B,MAAMC,QAAQ,GAACA,CAAA,KAAI;EAAAC,EAAA;EACf,MAAM;IAACC;EAAE,CAAC,GAACT,SAAS,CAAC,CAAC;EACtB,MAAM,CAACU,IAAI,EAACC,OAAO,CAAC,GAACR,QAAQ,CAAC;IAC1BS,MAAM,EAAC,EAAE;IACTC,SAAS,EAAC,EAAE;IACZC,OAAO,EAAC,EAAE;IACVC,SAAS,EAAC,EAAE;IACZC,WAAW,EAAC,EAAE;IACdC,OAAO,EAAC,EAAE;IACVC,IAAI,EAAC,EAAE;IACNC,MAAM,EAAC,EAAE;IACTC,mBAAmB,EAAC;EACvB,CAAC,CAAC;EACJlB,SAAS,CAAC,MAAM;IACZmB,aAAa,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAGN,MAAMA,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,kBAAiB,CAAC;MACpF,MAAMC,QAAQ,GAAGL,QAAQ,CAACZ,IAAI,CAACkB,IAAI,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAAClB,MAAM,KAAKH,EAAE,CAAC;MACpEE,OAAO,CAAC;QACLC,MAAM,EAACe,QAAQ,CAACf,MAAM;QACtBC,SAAS,EAACc,QAAQ,CAACd,SAAS;QAC5BC,OAAO,EAAC,EAAE;QACVC,SAAS,EAAC,EAAE;QACZC,WAAW,EAAC,EAAE;QACdC,OAAO,EAAC,EAAE;QACVC,IAAI,EAAC,EAAE;QACPC,MAAM,EAAC,EAAE;QACTC,mBAAmB,EAAC;MACvB,CAAC,CAAC;MACFW,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;IAEzB,CAAC,QAAOM,KAAK,EAAE;MACf;MACE;IAAA;EAEF,CAAC,EAAC;EACX,oBACI3B,OAAA;IAAK4B,SAAS,EAAC,aAAa;IAAAC,QAAA,eAC5B7B,OAAA,CAACL,WAAW;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV,CAAC;AAAC/B,EAAA,CA7CID,QAAQ;EAAA,QACCP,SAAS;AAAA;AAAAwC,EAAA,GADlBjC,QAAQ;AA8Cd,eAAeA,QAAQ;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}