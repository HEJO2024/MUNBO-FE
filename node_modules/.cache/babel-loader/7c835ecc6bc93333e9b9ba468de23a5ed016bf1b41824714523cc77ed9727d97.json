{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\100li\\\\Desktop\\\\admin\\\\src\\\\views\\\\QuizView.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport AdminHeader from \"../components/AdminHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizView = () => {\n  _s();\n  useEffect(() => {\n    fetchuserData();\n  }, []); //가져온 사용자데이터 실행\n\n  const fetchuserData = async () => {\n    try {\n      const response = await axios.get(`${process.env.REACT_APP_API_URL}/admin/users/listView`);\n      setUser(response.data.users);\n      const userData = response.data.users.find(item => item.userId === id);\n      setData({\n        userId: userData.userId,\n        passwd: userData.passwd,\n        userName: userData.userName,\n        userEmail: userData.userEmail,\n        is_admin: userData.is_admin\n      });\n    } catch (error) {\n      if (error.response.status === 500) {\n        alert(error.response.data.message);\n      }\n    }\n  }; // api로 사용자 전체 정보 받아오는 함수\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AdminHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this), \"1\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizView, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = QuizView;\nexport default QuizView;\nvar _c;\n$RefreshReg$(_c, \"QuizView\");","map":{"version":3,"names":["useEffect","AdminHeader","jsxDEV","_jsxDEV","QuizView","_s","fetchuserData","response","axios","get","process","env","REACT_APP_API_URL","setUser","data","users","userData","find","item","userId","id","setData","passwd","userName","userEmail","is_admin","error","status","alert","message","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/100li/Desktop/admin/src/views/QuizView.js"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport AdminHeader from \"../components/AdminHeader\";\r\n\r\nconst QuizView=()=>{\r\n    \r\n    useEffect(() => {\r\n        fetchuserData();\r\n     }, []); //가져온 사용자데이터 실행\r\n  \r\n     \r\n       const fetchuserData = async () => {     \r\n         try {\r\n             const response = await axios.get(`${process.env.REACT_APP_API_URL}/admin/users/listView`);\r\n             setUser(response.data.users);\r\n             const userData = response.data.users.find(item => item.userId === id);\r\n             setData({\r\n              userId: userData.userId,\r\n              passwd: userData.passwd,\r\n              userName: userData.userName,\r\n              userEmail: userData.userEmail,\r\n              is_admin: userData.is_admin\r\n          });\r\n         }catch (error) {\r\n          if(error.response.status===500){\r\n           alert(error.response.data.message);\r\n          }\r\n         }\r\n     };  // api로 사용자 전체 정보 받아오는 함수\r\n  return(\r\n    <div>\r\n    <AdminHeader/>  \r\n    1  \r\n    </div>\r\n  )\r\n};\r\nexport default QuizView;"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,WAAW,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,QAAQ,GAACA,CAAA,KAAI;EAAAC,EAAA;EAEfL,SAAS,CAAC,MAAM;IACZM,aAAa,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAGN,MAAMA,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,uBAAsB,CAAC;MACzFC,OAAO,CAACN,QAAQ,CAACO,IAAI,CAACC,KAAK,CAAC;MAC5B,MAAMC,QAAQ,GAAGT,QAAQ,CAACO,IAAI,CAACC,KAAK,CAACE,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,MAAM,KAAKC,EAAE,CAAC;MACrEC,OAAO,CAAC;QACPF,MAAM,EAAEH,QAAQ,CAACG,MAAM;QACvBG,MAAM,EAAEN,QAAQ,CAACM,MAAM;QACvBC,QAAQ,EAAEP,QAAQ,CAACO,QAAQ;QAC3BC,SAAS,EAAER,QAAQ,CAACQ,SAAS;QAC7BC,QAAQ,EAAET,QAAQ,CAACS;MACvB,CAAC,CAAC;IACH,CAAC,QAAOC,KAAK,EAAE;MACd,IAAGA,KAAK,CAACnB,QAAQ,CAACoB,MAAM,KAAG,GAAG,EAAC;QAC9BC,KAAK,CAACF,KAAK,CAACnB,QAAQ,CAACO,IAAI,CAACe,OAAO,CAAC;MACnC;IACD;EACJ,CAAC,CAAC,CAAE;EACP,oBACE1B,OAAA;IAAA2B,QAAA,gBACA3B,OAAA,CAACF,WAAW;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,KAEd;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEV,CAAC;AAAC7B,EAAA,CA/BID,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAgCd,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}