{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\100li\\\\Desktop\\\\admin\\\\src\\\\page\\\\Round\\\\RoundEdit.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport AdminHeader from \"../../components/AdminHeader\";\nimport AdminButton from \"../../components/AdminButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoundEdit = () => {\n  _s();\n  const [data, setData] = useState({\n    roundId: \"\",\n    roundName: \"\"\n  });\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchuserData();\n  }, []); //가져온 회차데이터 실행\n\n  const fetchuserData = async () => {\n    try {\n      const response = await axios.get(`/admin/round/listView`);\n      const roundData = response.data.find(item => item.roundId == id);\n      setData({\n        roundId: roundData.roundId,\n        roundName: userData.roundName\n      });\n    } catch (error) {\n      if (error.response.status === 500) {\n        alert(error.response.data.message);\n      } else if (error.response.status === 401 || error.response.status === 403) {\n        alert(error.response.data.message);\n        sessionStorage.removeItem(\"token\");\n        navigate(\"/admin/login\");\n      }\n    }\n  }; // api로 회차 정보 받아오는 함수\n\n  const handleSubmit = () => {\n    axios.put(`/admin/round/update`, {\n      roundName: data.roundName,\n      roundId: data.roundId\n    }).then(response => {\n      alert(\"회차가 수정되었습니다.\");\n      window.location.reload();\n    }).catch(error => {\n      if (error.response.status === 500) {\n        alert(error.response.data.message);\n      } else if (error.response.status === 401 || error.response.status === 403) {\n        alert(error.response.data.message);\n        sessionStorage.removeItem(\"token\");\n        navigate(\"/admin/login\");\n      }\n    });\n    navigate(\"/admin/round/view\");\n  }; // axios 이용하여 회차 생성처리하는 함수\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  }; //정보 수정 입력하면 바뀌는 함수\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AdminEntire\",\n    children: [/*#__PURE__*/_jsxDEV(AdminHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"UserText\",\n      children: \"\\uD68C\\uCC28 \\uC218\\uC815\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"roundName\",\n      className: \"RoundCreateBox\",\n      value: data.roundName,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RoundCreateButtonList\",\n      children: [/*#__PURE__*/_jsxDEV(AdminButton, {\n        text: \"\\uCDE8\\uC18C\",\n        className: \"RoundCreateButton\",\n        onClick: () => navigate(-1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(AdminButton, {\n        text: \"\\uC644\\uB8CC\",\n        className: \"RoundCreateButton\",\n        onClick: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(RoundEdit, \"ZrUBHLkbdApdzHihVPFif7uCFPQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = RoundEdit;\nexport default RoundEdit;\nvar _c;\n$RefreshReg$(_c, \"RoundEdit\");","map":{"version":3,"names":["axios","useEffect","useState","useNavigate","useParams","AdminHeader","AdminButton","jsxDEV","_jsxDEV","RoundEdit","_s","data","setData","roundId","roundName","id","navigate","fetchuserData","response","get","roundData","find","item","userData","error","status","alert","message","sessionStorage","removeItem","handleSubmit","put","then","window","location","reload","catch","handleChange","event","name","value","target","prevState","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","text","onClick","_c","$RefreshReg$"],"sources":["C:/Users/100li/Desktop/admin/src/page/Round/RoundEdit.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport AdminHeader from \"../../components/AdminHeader\";\r\nimport AdminButton from \"../../components/AdminButton\";\r\n\r\nconst RoundEdit=()=>{\r\n    const [data,setData]=useState({\r\n        roundId:\"\",\r\n        roundName:\"\"\r\n    });\r\n    const {id}=useParams();\r\n    const navigate=useNavigate();\r\n    useEffect(() => {\r\n        fetchuserData();\r\n     }, []); //가져온 회차데이터 실행\r\n    \r\n     \r\n       const fetchuserData = async () => {     \r\n         try {\r\n             const response = await axios.get(`/admin/round/listView`);\r\n             const roundData = response.data.find(item => item.roundId ==id);\r\n             setData({\r\n                roundId:roundData.roundId,\r\n                roundName:userData.roundName});\r\n        \r\n    \r\n         }catch (error) {\r\n          if(error.response.status===500){\r\n          alert(error.response.data.message);\r\n          }\r\n          else if(error.response.status===401 || error.response.status===403){\r\n            alert(error.response.data.message);\r\n            sessionStorage.removeItem(\"token\");\r\n            navigate(\"/admin/login\");\r\n           }\r\n         } } // api로 회차 정보 받아오는 함수\r\n\r\n         const handleSubmit=()=>{\r\n            axios.put(`/admin/round/update`,{\r\n                roundName:data.roundName,\r\n                roundId:data.roundId\r\n            }).then(response => {        \r\n                alert(\"회차가 수정되었습니다.\");\r\n                window.location.reload();\r\n            })\r\n            .catch(error => {\r\n               if(error.response.status===500){\r\n                 alert(error.response.data.message);\r\n               }\r\n              else if(error.response.status===401 || error.response.status===403){\r\n                 alert(error.response.data.message);\r\n                 sessionStorage.removeItem(\"token\");\r\n                 navigate(\"/admin/login\");\r\n                }\r\n            });\r\n            navigate(\"/admin/round/view\");\r\n\r\n           }  // axios 이용하여 회차 생성처리하는 함수\r\n\r\n         const handleChange = (event) => {\r\n            const { name, value } = event.target;\r\n            setData(prevState => ({\r\n                ...prevState,\r\n                [name]: value\r\n            }));\r\n        \r\n        }; //정보 수정 입력하면 바뀌는 함수\r\n return(\r\n    <div className=\"AdminEntire\">\r\n    <AdminHeader/>\r\n    <div className=\"UserText\">회차 수정</div>\r\n    <input name=\"roundName\" className=\"RoundCreateBox\" value={data.roundName} onChange={handleChange} ></input>\r\n    <div className=\"RoundCreateButtonList\">\r\n    <AdminButton text=\"취소\" className=\"RoundCreateButton\" onClick={()=>navigate(-1)}/>\r\n    <AdminButton text=\"완료\" className=\"RoundCreateButton\" onClick={handleSubmit}/>\r\n    </div></div>\r\n )\r\n};\r\nexport default RoundEdit;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}