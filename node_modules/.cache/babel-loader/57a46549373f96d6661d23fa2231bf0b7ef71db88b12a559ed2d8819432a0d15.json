{"ast":null,"code":"import{useEffect,useState}from\"react\";import{Link,useNavigate}from\"react-router-dom\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AdminHeader=()=>{const navigate=useNavigate();const[islogin,setIslogin]=useState(false);useEffect(()=>{const token=sessionStorage.getItem(\"token\");if(token){setIslogin(true);// 세션 스토리지에 토큰이 있으면 로그인 상태로 설정\n}else{setIslogin(false);// 세션 스토리지에 토큰이 없으면 로그아웃 상태로 설정\n}},[]);const handleLoginClick=()=>{navigate('/admin/login');};const handleLogoutClick=()=>{sessionStorage.removeItem(\"token\");// 세션 스토리지에서 토큰 삭제\nsetIslogin(false);// 로그아웃 상태로 변경\nnavigate('/');window.location.reload();};return/*#__PURE__*/_jsxs(\"div\",{className:\"Header\",children:[/*#__PURE__*/_jsx(\"img\",{src:process.env.PUBLIC_URL+'/MainLogo.png',width:\"50px\",className:\"HeaderLogo\"}),/*#__PURE__*/_jsx(Link,{to:\"/\",className:\"HeaderItem1\",children:\"\\uBB38\\uBCF4\"}),islogin==false?/*#__PURE__*/_jsx(\"div\",{className:\"HeaderItem2\",onClick:handleLoginClick,children:\" Login \"}):/*#__PURE__*/_jsxs(\"div\",{className:\"HeaderItem3\",children:[/*#__PURE__*/_jsx(Link,{to:\"/admin/user/view\",className:\"HeaderItem4\",children:\"\\uD68C\\uC6D0\\uAD00\\uB9AC\"}),/*#__PURE__*/_jsx(Link,{to:\"/admin/quiz/view\",className:\"HeaderItem4\",children:\"\\uAE30\\uCD9C\\uBB38\\uC81C\"}),/*#__PURE__*/_jsx(Link,{to:\"/admin/content/select\",className:\"HeaderItem4\",children:\"\\uD0A4\\uC6CC\\uB4DC/\\uACFC\\uBAA9/\\uD68C\\uCC28\"}),/*#__PURE__*/_jsx(\"div\",{className:\"HeaderItem4\",children:\"\\uD1B5\\uACC4/\\uD3C9\\uAC00\"}),/*#__PURE__*/_jsx(\"div\",{className:\"HeaderItem4\",children:\"\\uD1A0\\uD070\\uC0AC\\uC6A9\\uB7C9\"}),/*#__PURE__*/_jsx(\"div\",{onClick:handleLogoutClick,className:\"HeaderItem5\",children:\"\\uB85C\\uADF8\\uC544\\uC6C3\"}),/*#__PURE__*/_jsx(\"div\",{className:\"HeaderItem6\",children:\"\\uAD00\\uB9AC\\uC790\"}),\" \"]})]});};export default AdminHeader;","map":{"version":3,"names":["useEffect","useState","Link","useNavigate","jsx","_jsx","jsxs","_jsxs","AdminHeader","navigate","islogin","setIslogin","token","sessionStorage","getItem","handleLoginClick","handleLogoutClick","removeItem","window","location","reload","className","children","src","process","env","PUBLIC_URL","width","to","onClick"],"sources":["C:/Users/100li/Desktop/admin/src/components/AdminHeader.js"],"sourcesContent":["import {  useEffect, useState } from \"react\";\r\nimport { Link,  useNavigate } from \"react-router-dom\";\r\n\r\nconst AdminHeader=()=>{\r\n    const navigate=useNavigate();\r\n    const [islogin,setIslogin]=useState(false);\r\n    useEffect(() => {\r\n        const token = sessionStorage.getItem(\"token\");\r\n        if (token) {\r\n            setIslogin(true); // 세션 스토리지에 토큰이 있으면 로그인 상태로 설정\r\n        } else {\r\n            setIslogin(false); // 세션 스토리지에 토큰이 없으면 로그아웃 상태로 설정\r\n        }\r\n    }, []);\r\n\r\n    const handleLoginClick = () => {\r\n        navigate('/admin/login');\r\n    };\r\n\r\n    const handleLogoutClick = () => {\r\n        sessionStorage.removeItem(\"token\"); // 세션 스토리지에서 토큰 삭제\r\n        setIslogin(false); // 로그아웃 상태로 변경\r\n        navigate('/');\r\n        window.location.reload();\r\n    };\r\n \r\n\r\n return(\r\n    <div className=\"Header\">\r\n    <img src={process.env.PUBLIC_URL + '/MainLogo.png'} width = '50px' className=\"HeaderLogo\" />\r\n    <Link to=\"/\" className=\"HeaderItem1\">문보</Link>\r\n    {islogin==false?\r\n    <div className=\"HeaderItem2\" onClick={handleLoginClick}> Login </div>\r\n    :<div className=\"HeaderItem3\" >\r\n     <Link to=\"/admin/user/view\" className=\"HeaderItem4\">회원관리</Link> \r\n     <Link to=\"/admin/quiz/view\" className=\"HeaderItem4\">기출문제</Link> \r\n     <Link to=\"/admin/content/select\" className=\"HeaderItem4\">키워드/과목/회차</Link>\r\n     <div className=\"HeaderItem4\">통계/평가</div>\r\n     <div className=\"HeaderItem4\">토큰사용량</div>\r\n     <div onClick={handleLogoutClick} className=\"HeaderItem5\">로그아웃</div>\r\n     <div className=\"HeaderItem6\">관리자</div> </div>}\r\n    </div>\r\n    \r\n )\r\n};\r\nexport default AdminHeader; "],"mappings":"AAAA,OAAUA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC5C,OAASC,IAAI,CAAGC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEtD,KAAM,CAAAC,WAAW,CAACA,CAAA,GAAI,CAClB,KAAM,CAAAC,QAAQ,CAACN,WAAW,CAAC,CAAC,CAC5B,KAAM,CAACO,OAAO,CAACC,UAAU,CAAC,CAACV,QAAQ,CAAC,KAAK,CAAC,CAC1CD,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAY,KAAK,CAAGC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC,CAC7C,GAAIF,KAAK,CAAE,CACPD,UAAU,CAAC,IAAI,CAAC,CAAE;AACtB,CAAC,IAAM,CACHA,UAAU,CAAC,KAAK,CAAC,CAAE;AACvB,CACJ,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAI,gBAAgB,CAAGA,CAAA,GAAM,CAC3BN,QAAQ,CAAC,cAAc,CAAC,CAC5B,CAAC,CAED,KAAM,CAAAO,iBAAiB,CAAGA,CAAA,GAAM,CAC5BH,cAAc,CAACI,UAAU,CAAC,OAAO,CAAC,CAAE;AACpCN,UAAU,CAAC,KAAK,CAAC,CAAE;AACnBF,QAAQ,CAAC,GAAG,CAAC,CACbS,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAC5B,CAAC,CAGJ,mBACGb,KAAA,QAAKc,SAAS,CAAC,QAAQ,CAAAC,QAAA,eACvBjB,IAAA,QAAKkB,GAAG,CAAEC,OAAO,CAACC,GAAG,CAACC,UAAU,CAAG,eAAgB,CAACC,KAAK,CAAG,MAAM,CAACN,SAAS,CAAC,YAAY,CAAE,CAAC,cAC5FhB,IAAA,CAACH,IAAI,EAAC0B,EAAE,CAAC,GAAG,CAACP,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,cAAE,CAAM,CAAC,CAC7CZ,OAAO,EAAE,KAAK,cACfL,IAAA,QAAKgB,SAAS,CAAC,aAAa,CAACQ,OAAO,CAAEd,gBAAiB,CAAAO,QAAA,CAAC,SAAO,CAAK,CAAC,cACpEf,KAAA,QAAKc,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC5BjB,IAAA,CAACH,IAAI,EAAC0B,EAAE,CAAC,kBAAkB,CAACP,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,0BAAI,CAAM,CAAC,cAC/DjB,IAAA,CAACH,IAAI,EAAC0B,EAAE,CAAC,kBAAkB,CAACP,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,0BAAI,CAAM,CAAC,cAC/DjB,IAAA,CAACH,IAAI,EAAC0B,EAAE,CAAC,uBAAuB,CAACP,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,8CAAS,CAAM,CAAC,cACzEjB,IAAA,QAAKgB,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,2BAAK,CAAK,CAAC,cACxCjB,IAAA,QAAKgB,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,gCAAK,CAAK,CAAC,cACxCjB,IAAA,QAAKwB,OAAO,CAAEb,iBAAkB,CAACK,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,0BAAI,CAAK,CAAC,cACnEjB,IAAA,QAAKgB,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,oBAAG,CAAK,CAAC,IAAC,EAAK,CAAC,EACzC,CAAC,CAGV,CAAC,CACD,cAAe,CAAAd,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}