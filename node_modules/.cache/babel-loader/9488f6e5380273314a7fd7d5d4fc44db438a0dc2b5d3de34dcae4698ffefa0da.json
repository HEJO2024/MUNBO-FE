{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\100li\\\\Desktop\\\\admin\\\\src\\\\views\\\\AdminLogin.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport AdminButton from \"../components/AdminButton\";\nimport AdminHeader from \"../components/AdminHeader\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminLogin = () => {\n  _s();\n  const [id, setId] = useState();\n  const [password, setPassword] = useState();\n  const navigate = useNavigate();\n  const handleSubmit = () => {\n    axios.post(`${process.env.REACT_APP_API_URL}/admin/users/login`, {\n      userId: id,\n      passwd: password\n    }).then(response => {\n      const token = response.headers.authorization;\n    }).catch(error => {\n      if (error.response && error.response.data) {\n        // 서버 응답이 있고, 데이터가 있는 경우\n        const errorMessage = error.response.data.message;\n        alert(errorMessage); // 에러 메시지 표시\n      } else if (error.request) {\n        // 요청이 만들어졌지만 응답이 없는 경우\n        console.error('No response received:', error.request);\n      } else {\n        // 요청을 보내기 전에 발생한 오류\n        console.error('Request error:', error.message);\n      }\n    });\n    navigate(\"/\");\n  }; // axios 이용하여 로그인하는 함수\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AdminLogin\",\n    children: [/*#__PURE__*/_jsxDEV(AdminHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LoginText\",\n      children: \"\\uAD00\\uB9AC\\uC790\\uC6A9 \\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"\\uC544\\uC774\\uB514\",\n      value: id,\n      onChange: e => setId(e.target.value),\n      className: \"LoginInput\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      className: \"LoginInput\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AdminButton, {\n      text: \"\\uB85C\\uADF8\\uC778\",\n      className: \"LoginButton\",\n      onClick: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminLogin, \"3ur0RzYhu+h1QMQiqDiCnH6alTQ=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminLogin;\nexport default AdminLogin;\nvar _c;\n$RefreshReg$(_c, \"AdminLogin\");","map":{"version":3,"names":["useEffect","useState","AdminButton","AdminHeader","useNavigate","axios","jsxDEV","_jsxDEV","AdminLogin","_s","id","setId","password","setPassword","navigate","handleSubmit","post","process","env","REACT_APP_API_URL","userId","passwd","then","response","token","headers","authorization","catch","error","data","errorMessage","message","alert","request","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","text","onClick","_c","$RefreshReg$"],"sources":["C:/Users/100li/Desktop/admin/src/views/AdminLogin.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport AdminButton from \"../components/AdminButton\";\r\nimport AdminHeader from \"../components/AdminHeader\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nconst AdminLogin=()=>{\r\n    const [id,setId]=useState();\r\n    const [password,setPassword]=useState();\r\n    const navigate=useNavigate()\r\n    const handleSubmit=()=>{\r\n\r\n    axios.post(`${process.env.REACT_APP_API_URL}/admin/users/login`, {\r\n       userId:id,\r\n       passwd:password\r\n       \r\n     })\r\n     .then(response => {        \r\n        const token = response.headers.authorization;   \r\n        \r\n     })\r\n     .catch(error => {\r\n        if (error.response && error.response.data) {\r\n            // 서버 응답이 있고, 데이터가 있는 경우\r\n            const errorMessage = error.response.data.message;\r\n            alert(errorMessage); // 에러 메시지 표시\r\n        } else if (error.request) {\r\n            // 요청이 만들어졌지만 응답이 없는 경우\r\n            console.error('No response received:', error.request);\r\n        } else {\r\n            // 요청을 보내기 전에 발생한 오류\r\n            console.error('Request error:', error.message);\r\n        }\r\n    });\r\n    navigate(\"/\");\r\n    }  // axios 이용하여 로그인하는 함수\r\n\r\n return(\r\n    <div className=\"AdminLogin\">\r\n        <AdminHeader/>\r\n        <div className=\"LoginText\">관리자용 로그인</div>\r\n        <input placeholder=\"아이디\" value={id} onChange={(e)=>setId(e.target.value)} className=\"LoginInput\"></input>\r\n        <input placeholder=\"비밀번호\" value={password} onChange={(e)=>setPassword(e.target.value)} className=\"LoginInput\"></input>\r\n        <AdminButton text=\"로그인\" className=\"LoginButton\" onClick={handleSubmit} />\r\n        \r\n    </div>\r\n )\r\n};\r\nexport default AdminLogin;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}