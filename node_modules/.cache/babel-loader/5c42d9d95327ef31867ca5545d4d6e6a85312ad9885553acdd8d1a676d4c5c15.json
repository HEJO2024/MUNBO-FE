{"ast":null,"code":"import{useState}from\"react\";import AdminButton from\"../../components/AdminButton\";import AdminHeader from\"../../components/AdminHeader\";import{useNavigate}from\"react-router-dom\";import axios from\"axios\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const RoundCreate=()=>{const[data,setData]=useState();const navigate=useNavigate();const handleSubmit=async()=>{axios.post(\"/admin/round/create\",{roundName:data}).then(response=>{alert(\"회차가 생성되었습니다.\");window.location.reload();}).catch(error=>{if(error.response.status===500){alert(error.response.data.message);}else if(error.response.status===401||error.response.status===403){alert(error.response.data.message);sessionStorage.removeItem(\"token\");navigate(\"/admin/login\");}});navigate(\"/admin/round/view\");};// axios 이용하여 회차 생성처리하는 함수\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"AdminEntire\",children:[/*#__PURE__*/_jsx(AdminHeader,{}),/*#__PURE__*/_jsx(\"div\",{className:\"UserText\",children:\"\\uD68C\\uCC28 \\uC0DD\\uC131\"}),/*#__PURE__*/_jsx(\"input\",{className:\"RoundCreateBox\",onChange:e=>setData(e.target.value)}),/*#__PURE__*/_jsxs(\"div\",{className:\"RoundCreateButtonList\",children:[/*#__PURE__*/_jsx(AdminButton,{text:\"\\uCDE8\\uC18C\",className:\"RoundCreateButton\",onClick:()=>navigate(-1)}),/*#__PURE__*/_jsx(AdminButton,{text:\"\\uC644\\uB8CC\",className:\"RoundCreateButton\",onClick:handleSubmit})]})]});};export default RoundCreate;","map":{"version":3,"names":["useState","AdminButton","AdminHeader","useNavigate","axios","jsx","_jsx","jsxs","_jsxs","RoundCreate","data","setData","navigate","handleSubmit","post","roundName","then","response","alert","window","location","reload","catch","error","status","message","sessionStorage","removeItem","className","children","onChange","e","target","value","text","onClick"],"sources":["C:/Users/100li/Desktop/admin/src/page/Round/RoundCreate.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport AdminButton from \"../../components/AdminButton\";\r\nimport AdminHeader from \"../../components/AdminHeader\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst RoundCreate=()=>{\r\n    const [data,setData]=useState();\r\n    const navigate=useNavigate();\r\n    const handleSubmit=async()=>{\r\n        axios.post(`/admin/round/create`,{\r\n            roundName:data\r\n        }).then(response => {        \r\n            alert(\"회차가 생성되었습니다.\");\r\n            window.location.reload();\r\n        })\r\n        .catch(error => {\r\n          if(error.response.status===500){\r\n             alert(error.response.data.message);\r\n           }\r\n          else if(error.response.status===401 || error.response.status===403){\r\n             alert(error.response.data.message);\r\n             sessionStorage.removeItem(\"token\");\r\n             navigate(\"/admin/login\");\r\n            }\r\n        });\r\n        navigate(\"/admin/round/view\");\r\n\r\n       }  // axios 이용하여 회차 생성처리하는 함수\r\n    \r\nreturn(\r\n    <div className=\"AdminEntire\">\r\n        <AdminHeader/>\r\n        <div className=\"UserText\">회차 생성</div>\r\n        <input className=\"RoundCreateBox\" onChange={(e)=>setData(e.target.value)} ></input>\r\n        <div className=\"RoundCreateButtonList\">\r\n        <AdminButton text=\"취소\" className=\"RoundCreateButton\" onClick={()=>navigate(-1)}/>\r\n        <AdminButton text=\"완료\" className=\"RoundCreateButton\" onClick={handleSubmit}/>\r\n        </div></div>\r\n)\r\n};\r\nexport default RoundCreate;"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,MAAO,CAAAC,WAAW,KAAM,8BAA8B,CACtD,MAAO,CAAAC,WAAW,KAAM,8BAA8B,CACtD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,WAAW,CAACA,CAAA,GAAI,CAClB,KAAM,CAACC,IAAI,CAACC,OAAO,CAAC,CAACX,QAAQ,CAAC,CAAC,CAC/B,KAAM,CAAAY,QAAQ,CAACT,WAAW,CAAC,CAAC,CAC5B,KAAM,CAAAU,YAAY,CAAC,KAAAA,CAAA,GAAS,CACxBT,KAAK,CAACU,IAAI,uBAAuB,CAC7BC,SAAS,CAACL,IACd,CAAC,CAAC,CAACM,IAAI,CAACC,QAAQ,EAAI,CAChBC,KAAK,CAAC,cAAc,CAAC,CACrBC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAC5B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,EAAI,CACd,GAAGA,KAAK,CAACN,QAAQ,CAACO,MAAM,GAAG,GAAG,CAAC,CAC5BN,KAAK,CAACK,KAAK,CAACN,QAAQ,CAACP,IAAI,CAACe,OAAO,CAAC,CACpC,CAAC,IACG,IAAGF,KAAK,CAACN,QAAQ,CAACO,MAAM,GAAG,GAAG,EAAID,KAAK,CAACN,QAAQ,CAACO,MAAM,GAAG,GAAG,CAAC,CAChEN,KAAK,CAACK,KAAK,CAACN,QAAQ,CAACP,IAAI,CAACe,OAAO,CAAC,CAClCC,cAAc,CAACC,UAAU,CAAC,OAAO,CAAC,CAClCf,QAAQ,CAAC,cAAc,CAAC,CACzB,CACJ,CAAC,CAAC,CACFA,QAAQ,CAAC,mBAAmB,CAAC,CAE9B,CAAC,CAAE;AAEV,mBACIJ,KAAA,QAAKoB,SAAS,CAAC,aAAa,CAAAC,QAAA,eACxBvB,IAAA,CAACJ,WAAW,GAAC,CAAC,cACdI,IAAA,QAAKsB,SAAS,CAAC,UAAU,CAAAC,QAAA,CAAC,2BAAK,CAAK,CAAC,cACrCvB,IAAA,UAAOsB,SAAS,CAAC,gBAAgB,CAACE,QAAQ,CAAGC,CAAC,EAAGpB,OAAO,CAACoB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE,CAAS,CAAC,cACnFzB,KAAA,QAAKoB,SAAS,CAAC,uBAAuB,CAAAC,QAAA,eACtCvB,IAAA,CAACL,WAAW,EAACiC,IAAI,CAAC,cAAI,CAACN,SAAS,CAAC,mBAAmB,CAACO,OAAO,CAAEA,CAAA,GAAIvB,QAAQ,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,cACjFN,IAAA,CAACL,WAAW,EAACiC,IAAI,CAAC,cAAI,CAACN,SAAS,CAAC,mBAAmB,CAACO,OAAO,CAAEtB,YAAa,CAAC,CAAC,EACxE,CAAC,EAAK,CAAC,CAEpB,CAAC,CACD,cAAe,CAAAJ,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}